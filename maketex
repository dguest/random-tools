#!/usr/bin/env bash

_usage() {
    echo "usage: ${0##*/} [-h] [-m <talk name>]"
}
_help() {
    _usage
    cat <<EOF
Make a talk template in Beamer.

Options:
 -h: get help
 -m: build makefile for <talk name> (don't output talk)

EOF
}

# __________________________________________________________________
# top level run script

_run() {
    local opt
    local MAKE_TARGET=''
    while getopts ":hm:" opt $@; do
	case $opt in
	    h) _help; return 1;;
	    m) MAKE_TARGET=${OPTARG} ;;
	    # handle errors
	    \?) _usage; echo "Unknown option: -$OPTARG" >&2; exit 1;;
            :) _usage; echo "Missing argument for -$OPTARG" >&2; exit 1;;
            *) _usage; echo "Unimplemented option: -$OPTARG" >&2; exit 1;;

	esac
    done
    shift $(($OPTIND - 1))
    if [[ $@ ]] ; then
	_usage
	echo "error: should get no args, got $@..." >&2
	return 1
    fi
    if [[ $MAKE_TARGET ]] ; then
	if [[ ! $MAKE_TARGET == *.tex ]] ; then
	    echo "target should be a .tex file, quitting..." >&2
	    return 1
	fi
	_makefile $MAKE_TARGET
	return 0
    fi
    _make_talk
}

_make_talk() {
    # top level functions to dump info
    _basic_header "Update" "Dan Guest" "UC Irvine" "UCI"
    _uci_colors
    echo
    _misc_style
    _basic_physics_symbols
    _susy_symbols
    echo
    _larger_macros
    echo
    echo "\graphicspath{{figures/}}"
    echo "\begin{document}"
    echo
    echo "\end{document}"
}

_basic_header() {
    local TITLE=${1}
    local LONG_NAME=${2-"Dan Guest"}
    local LONG_INST=${3-"UC Irvine"}
    local INST=${4-"UCI"}
    cat <<EOF
\documentclass{beamer}
\useoutertheme{infolines}
\title{$TITLE}
\author[${USER}]{$LONG_NAME}
\institute[${INST}]{${LONG_INST}}
EOF
}
_uci_colors() {
    cat <<EOF
\definecolor{UCIBlue}{RGB}{0,100,164}
\definecolor{UCIYellow}{RGB}{255,210,0}
\definecolor{UCIYDull}{RGB}{247,235,95}
\definecolor{UCIBDull}{RGB}{106,162,184}
\definecolor{UCIBDark}{RGB}{27,61,109}
\usecolortheme{crane}
\setbeamercolor*{palette primary}{use=structure,fg=white,bg=UCIBlue}
\setbeamercolor*{palette secondary}{use=structure,fg=white,bg=UCIYellow}
\setbeamercolor*{palette tertiary}{use=structure,fg=white,bg=UCIBDark}
EOF
}
_misc_style() {
    cat <<EOF
\setbeamertemplate{enumerate items}[default]
\setbeamertemplate{navigation symbols}{}
\setbeamercovered{transparent}
\usefonttheme{serif} % default family is serif
EOF
}

_basic_physics_symbols() {
    cat <<EOF
\newcommand{\T}{\mathrm{T}}
\newcommand{\pt}{p_{\mathrm{T}}}
\newcommand{\met}{E_{\mathrm{T}}^{\mathrm{miss}}}
EOF
}

_susy_symbols() {
    cat <<EOF
\newcommand{\supp}[1]{\tilde{#1}}
\newcommand{\neut}{\supp{\chi}_1^0}
\newcommand{\cha}{\supp{\chi}_{1}^{\pm}}
EOF
}

_larger_macros() {
    cat <<EOF
\newcommand{\graphic}[2][0.99]{\includegraphics[width=#1\textwidth]{#2}}
\newcommand{\backupbegin}{
   \newcounter{framenumberappendix}
   \setcounter{framenumberappendix}{\value{framenumber}}
}
\newcommand{\backupend}{
   \addtocounter{framenumberappendix}{-\value{framenumber}}
   \addtocounter{framenumber}{\value{framenumberappendix}}
}
\newcommand{\link}[2]{\underline{\href{#2}{#1}}}
\newcommand{\twocol}[3][0.5]{
  \newdimen\scwid
  \scwid=\dimexpr\textwidth-#1\textwidth\relax
  \begin{columns}
    \begin{column}{#1\textwidth}#2\end{column}
      \begin{column}{\scwid}#3\end{column}
  \end{columns}
}
\newcommand{\cent}[1]{\begin{center}#1\end{center}}
EOF
}

# __________________________________________________________________
# to make a makefile

_makefile() {
    local TALK_NAME=$1
    cat <<EOF >| makefile
BIBTEX   = bibtex
PDFTEX = pdflatex -interaction=nonstopmode -halt-on-error -shell-escape

.PHONY: all

ALLSRC := ${TALK_NAME}
all: \$(ALLSRC:.tex=.pdf)
	@rm -f TMP-*

TEXFILES := \$(shell find -L -name '*.tex')
FIGURES := \$(shell find -L figures/ -name '*.pdf')

%.bbl: %.tex \$(TEXFILES) *.bib
	\$(PDFTEX) $* --draftmode
	\$(BIBTEX) $*

IGNORE_WARNINGS := 'Marginpar on page|float specifier changed'
COLOR_WARNINGS := '^LaTeX Warning:|Fatal error'
FILTER_WARN := egrep -v \$(IGNORE_WARNINGS) | egrep --color \$(COLOR_WARNINGS)
%.pdf: %.tex \$(TEXFILES) \$(FIGURES)
	\$(PDFTEX) $< --draftmode
	\$(PDFTEX) $<
EOF
}


_run $@
